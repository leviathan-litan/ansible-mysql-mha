#!/usr/bin/env perl

#  Copyright (C) 2011 DeNA Co.,Ltd.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#  Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

## Note: This is a sample script and is not complete. Modify the script based on your environment.

use strict;
use warnings FATAL => 'all';

use Getopt::Long;
use MHA::DBHelper;

my (
  $command,        $ssh_user,         $orig_master_host,
  $orig_master_ip, $orig_master_port, $new_master_host,
  $new_master_ip,  $new_master_port,  $new_master_user,
  $new_master_password
);
GetOptions(
  'command=s'             => \$command,
  'ssh_user=s'            => \$ssh_user,
  'orig_master_host=s'    => \$orig_master_host,
  'orig_master_ip=s'      => \$orig_master_ip,
  'orig_master_port=i'    => \$orig_master_port,
  'new_master_host=s'     => \$new_master_host,
  'new_master_ip=s'       => \$new_master_ip,
  'new_master_port=i'     => \$new_master_port,
  'new_master_user=s'     => \$new_master_user,
  'new_master_password=s' => \$new_master_password,
);

exit &main();

sub main {
  if ( $command eq "stop" || $command eq "stopssh" ) {

    # $orig_master_host, $orig_master_ip, $orig_master_port are passed.
    # If you manage master ip address at global catalog database,
    # invalidate orig_master_ip here.
    my $exit_code = 1;
    eval {

      # updating global catalog, etc
      $exit_code = 0;
    };
    if ($@) {
      warn "Got Error: $@\n";
      exit $exit_code;
    }
    exit $exit_code;
  }
  elsif ( $command eq "start" ) {

    # all arguments are passed.
    # If you manage master ip address at global catalog database,
    # activate new_master_ip here.
    # You can also grant write access (create user, set read_only=0, etc) here.
    my $exit_code = 10;
    eval {
      my $new_master_handler = new MHA::DBHelper();

      # args: hostname, port, user, password, raise_error_or_not
      $new_master_handler->connect( $new_master_ip, $new_master_port,
        $new_master_user, $new_master_password, 1 );

      ## Set read_only=0 on the new master
      $new_master_handler->disable_log_bin_local();
      print "Set read_only=0 on the new master.\n";
      $new_master_handler->disable_read_only();

      ## Creating an app user on the new master
      print "Creating app user on the new master..\n";
      
      # ###########################################################
      # 注释原代码
      # ###########################################################
      #FIXME_xxx_create_user( $new_master_handler->{dbh} );
      # ###########################################################
      
      $new_master_handler->enable_log_bin_local();
      $new_master_handler->disconnect();

      ## Update master ip on the catalog database, etc
      # ###########################################################
      # 注释原代码
      # ###########################################################
      #FIXME_xxx;
      # ###########################################################
      
      # ###########################################################
      # 自定义脚本部分
      # ###########################################################
      # 旧主

      # 【VIP】
      # 在以前，不使用KeepAlived的时候，使用这种方式解绑VIP
      #`/usr/bin/ssh -o ConnectTimeout=5 -t {{ mha_linux_user }}\@${orig_master_ip} "ip addr del 10.65.61.240/24 dev eth0"`;
      #
      # 现在VIP资源的绑定与切换，统一由do_mha.sh管理


      # 新主

      # 【VIP】
      # 在以前不使用KeepAlived的时候，使用这种方式解绑VIP
      #`/usr/bin/ssh -o ConnectTimeout=5 -t {{ mha_linux_user }}\@${new_master_ip} "ip addr add 10.65.61.240/24 dev eth0"`;
      #
      # 现在VIP资源的绑定与切换，统一由do_mha.sh管理
      # 但【新主】，在切换过程中，还需要有权重动态提权的步骤，保证一定会切换

      # 获取新主的权重值
      my $new_master_keepalived_priority=readpipe('/usr/bin/ssh -o ConnectTimeout=5 -t {{ mha_linux_user }}\@'.${new_master_ip}.' "sudo cat /etc/keepalived/keepalived.conf | grep pri" | awk -F "y" "{print $2}" | /usr/bin/python -c "s=raw_input();print(s.strip())"');
      $new_master_keepalived_priority=~ s/[^0-9]//g;

      # 权重值跨步数：55
      # -- Perl中定义了一个新的变量的时候，需要用【my】声明一下，否则会报错
      my $new_master_keepalived_priority_sed = $new_master_keepalived_priority + 55;

      # 显示
      print "\n";
      print "========================================\n";
      print "KeepAlived Priority / Dynamic Change\n";
      print "========================================\n";
      print "new master[".$new_master_ip."] / keepalived / priority = [".$new_master_keepalived_priority."]\n";
      print "new master / priority change to = [".$new_master_keepalived_priority_sed."]\n";
      print "========================================\n";
      print "\n";

      # 执行替换
      `/usr/bin/ssh -o ConnectTimeout=5 -t {{ mha_linux_user }}\@${new_master_ip} "sudo sed -i '/priority/s/${new_master_keepalived_priority}/${new_master_keepalived_priority_sed}/g' /etc/keepalived/keepalived.conf; sleep 3;sudo service keepalived restart;"`;

      # ###########################################################

      $exit_code = 0;
    };
    if ($@) {
      warn $@;

      # If you want to continue failover, exit 10.
      exit $exit_code;
    }
    exit $exit_code;
  }
  elsif ( $command eq "status" ) {

    # do nothing
    exit 0;
  }
  else {
    &usage();
    exit 1;
  }
}

sub usage {
  print
"Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n";
}
